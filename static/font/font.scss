@font-face {
    font-family: "Icons";
    src: url('../../font/Icons.eot');
    src: url('../../font/Icons.eot?#iefix') format('eot'),
    url('../../font/Icons.woff') format('woff'),
    url('../../font/Icons.ttf') format('truetype'),
    url('../../font/Icons.svg#Icons') format('svg');
}

@mixin icon-styles {
    font-family: "Icons";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
    text-decoration: none;
    text-transform: none;
}

%icon {
    @include icon-styles;
}

@function icon-char($filename) {
    $char: "";

@if $filename == check {
    $char: "\E001";
}
@if $filename == identity {
    $char: "\E002";
}
@if $filename == location {
    $char: "\E003";
}
@if $filename == love {
    $char: "\E004";
}
@if $filename == plus {
    $char: "\E005";
}
@if $filename == right {
    $char: "\E006";
}
@if $filename == setting {
    $char: "\E007";
}
@if $filename == slide-down {
    $char: "\E008";
}
@if $filename == slide-up {
    $char: "\E009";
}

@return $char;
}

@mixin icon($filename, $insert: before, $extend: true) {
&:#{$insert} {
    @if $extend {
        @extend %icon;
    } @else {
        @include icon-styles;
    }
        content: icon-char($filename);
    }
}

.icon-check {
    @include icon(check);
}
.icon-identity {
    @include icon(identity);
}
.icon-location {
    @include icon(location);
}
.icon-love {
    @include icon(love);
}
.icon-plus {
    @include icon(plus);
}
.icon-right {
    @include icon(right);
}
.icon-setting {
    @include icon(setting);
}
.icon-slide-down {
    @include icon(slide-down);
}
.icon-slide-up {
    @include icon(slide-up);
}